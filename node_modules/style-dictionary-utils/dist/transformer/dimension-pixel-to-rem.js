"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.dimensionPixelToRem = void 0;
const isDimension_1 = require("../filter/isDimension");
/**
 * dimensionPixelToRem
 * @description convert all dimensions that use pixel value to rem, uses `platform.options.basePxFontSize`
 * as the base font, or `16` if not provided
 */
exports.dimensionPixelToRem = {
    type: `value`,
    transitive: true,
    matcher: (token) => (0, isDimension_1.isDimension)(token) && token.value.substring(token.value.length - 2) === 'px',
    transformer: (token, platform) => {
        const baseFont = (platform === null || platform === void 0 ? void 0 : platform.basePxFontSize) || 16;
        const floatVal = parseFloat(token.value);
        if (isNaN(floatVal)) {
            throw `Invalid Number: '${token.name}: ${token.value}' is not a valid number, cannot transform to rem \n`;
        }
        if (floatVal === 0) {
            return '0';
        }
        return `${floatVal / baseFont}rem`;
    }
};
