"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
const OrigialStyleDictionary = __importStar(require("style-dictionary"));
const isBorder_1 = require("./filter/isBorder");
const isColor_1 = require("./filter/isColor");
const isColorOrGradient_1 = require("./filter/isColorOrGradient");
const isCubicBezier_1 = require("./filter/isCubicBezier");
const isDimension_1 = require("./filter/isDimension");
const isDuration_1 = require("./filter/isDuration");
const isFontFamily_1 = require("./filter/isFontFamily");
const isFontWeight_1 = require("./filter/isFontWeight");
const isGradient_1 = require("./filter/isGradient");
const isShadow_1 = require("./filter/isShadow");
const isSource_1 = require("./filter/isSource");
const isStrokeStyle_1 = require("./filter/isStrokeStyle");
const isTransition_1 = require("./filter/isTransition");
const isTypographic_1 = require("./filter/isTypographic");
const isTypography_1 = require("./filter/isTypography");
const javascript_commonJs_1 = require("./format/javascript-commonJs");
const javascript_esm_1 = require("./format/javascript-esm");
const w3c_token_json_parser_1 = require("./parser/w3c-token-json-parser");
const border_css_1 = require("./transformer/border-css");
const color_alpha_to_hex_1 = require("./transformer/color-alpha-to-hex");
const color_alpha_to_rgba_1 = require("./transformer/color-alpha-to-rgba");
const color_to_hex_1 = require("./transformer/color-to-hex");
const color_to_rgba_1 = require("./transformer/color-to-rgba");
const cubic_bezier_css_1 = require("./transformer/cubic-bezier-css");
const dimension_pixel_to_rem_1 = require("./transformer/dimension-pixel-to-rem");
const dimension_rem_to_pixel_1 = require("./transformer/dimension-rem-to-pixel");
const font_css_1 = require("./transformer/font-css");
const font_family_css_1 = require("./transformer/font-family-css");
const font_weight_to_number_1 = require("./transformer/font-weight-to-number");
const name_path_to_dot_notation_1 = require("./transformer/name-path-to-dot-notation");
const shadow_css_1 = require("./transformer/shadow-css");
const cssExtended_1 = require("./transformGroups/cssExtended");
const gradient_css_1 = require("./transformer/gradient-css");
const clamp_css_1 = require("./transformer/clamp-css");
const color_to_rgba_float_1 = require("./transformer/color-to-rgba-float");
const dimension_to_pixelUnitless_1 = require("./transformer/dimension-to-pixelUnitless");
const isClamp_1 = require("./filter/isClamp");
const css_advanced_1 = require("./format/css-advanced");
/**
 * Parsers
 *
 */
OrigialStyleDictionary.registerParser(w3c_token_json_parser_1.w3cTokenJsonParser);
/**
 * Formats
 *
 */
OrigialStyleDictionary.registerFormat({
    name: 'javascript/esm',
    formatter: javascript_esm_1.javascriptEsm
});
OrigialStyleDictionary.registerFormat({
    name: 'javascript/commonJs',
    formatter: javascript_commonJs_1.javascriptCommonJs
});
OrigialStyleDictionary.registerFormat({
    name: 'css/advanced',
    formatter: css_advanced_1.cssAdvanced
});
/**
 * Transformers
 *
 */
OrigialStyleDictionary.registerTransform(Object.assign({ name: 'color/rgbAlpha' }, color_alpha_to_rgba_1.colorAlphaToRgba));
OrigialStyleDictionary.registerTransform(Object.assign({ name: 'color/hexAlpha' }, color_alpha_to_hex_1.colorAlphaToHex));
OrigialStyleDictionary.registerTransform(Object.assign({ name: 'color/hex' }, color_to_hex_1.colorToHex));
OrigialStyleDictionary.registerTransform(Object.assign({ name: 'color/rgba' }, color_to_rgba_1.colorToRgba));
OrigialStyleDictionary.registerTransform(Object.assign({ name: 'color/rgbaFloat' }, color_to_rgba_float_1.colorToRgbaFloat));
OrigialStyleDictionary.registerTransform(Object.assign({ name: 'name/pathToDotNotation' }, name_path_to_dot_notation_1.namePathToDotNotation));
OrigialStyleDictionary.registerTransform(Object.assign({ name: 'shadow/css' }, shadow_css_1.shadowCss));
OrigialStyleDictionary.registerTransform(Object.assign({ name: 'gradient/css' }, gradient_css_1.gradientCss));
OrigialStyleDictionary.registerTransform(Object.assign({ name: 'clamp/css' }, clamp_css_1.clampCss));
OrigialStyleDictionary.registerTransform(Object.assign({ name: 'font/css' }, font_css_1.fontCss));
OrigialStyleDictionary.registerTransform(Object.assign({ name: 'fontFamily/css' }, font_family_css_1.fontFamilyCss));
OrigialStyleDictionary.registerTransform(Object.assign({ name: 'fontWeight/number' }, font_weight_to_number_1.fontWeightToNumber));
OrigialStyleDictionary.registerTransform(Object.assign({ name: 'cubicBezier/css' }, cubic_bezier_css_1.cubicBezierCss));
OrigialStyleDictionary.registerTransform(Object.assign({ name: 'dimension/pixelToRem' }, dimension_pixel_to_rem_1.dimensionPixelToRem));
OrigialStyleDictionary.registerTransform(Object.assign({ name: 'dimension/remToPixel' }, dimension_rem_to_pixel_1.dimensionRemToPixel));
OrigialStyleDictionary.registerTransform(Object.assign({ name: 'dimension/pixelUnitless' }, dimension_to_pixelUnitless_1.dimensionToPixelUnitless));
OrigialStyleDictionary.registerTransform(Object.assign({ name: 'border/css' }, border_css_1.borderCss));
/**
 * Transform groups
 *
 */
OrigialStyleDictionary.registerTransformGroup(cssExtended_1.cssExtended);
/**
 * Filters
 *
 */
OrigialStyleDictionary.registerFilter({
    name: 'isSource',
    matcher: isSource_1.isSource
});
OrigialStyleDictionary.registerFilter({
    name: 'isColor',
    matcher: isColor_1.isColor
});
OrigialStyleDictionary.registerFilter({
    name: 'isClamp',
    matcher: isClamp_1.isClamp
});
OrigialStyleDictionary.registerFilter({
    name: 'isGradient',
    matcher: isGradient_1.isGradient
});
OrigialStyleDictionary.registerFilter({
    name: 'isColorOrGradient',
    matcher: isColorOrGradient_1.isColorOrGradient
});
OrigialStyleDictionary.registerFilter({
    name: 'isTypography',
    matcher: isTypography_1.isTypography
});
OrigialStyleDictionary.registerFilter({
    name: 'isTypographic',
    matcher: isTypographic_1.isTypographic
});
OrigialStyleDictionary.registerFilter({
    name: 'isTransition',
    matcher: isTransition_1.isTransition
});
OrigialStyleDictionary.registerFilter({
    name: 'isStrokeStyle',
    matcher: isStrokeStyle_1.isStrokeStyle
});
OrigialStyleDictionary.registerFilter({
    name: 'isShadow',
    matcher: isShadow_1.isShadow
});
OrigialStyleDictionary.registerFilter({
    name: 'isFontWeight',
    matcher: isFontWeight_1.isFontWeight
});
OrigialStyleDictionary.registerFilter({
    name: 'isFontFamily',
    matcher: isFontFamily_1.isFontFamily
});
OrigialStyleDictionary.registerFilter({
    name: 'isDuration',
    matcher: isDuration_1.isDuration
});
OrigialStyleDictionary.registerFilter({
    name: 'isDimension',
    matcher: isDimension_1.isDimension
});
OrigialStyleDictionary.registerFilter({
    name: 'isCubicBezier',
    matcher: isCubicBezier_1.isCubicBezier
});
OrigialStyleDictionary.registerFilter({
    name: 'isBorder',
    matcher: isBorder_1.isBorder
});
module.exports = OrigialStyleDictionary;
